# GitHub Actions Workflow für Hugo Website Build und ZIP-Upload
name: Build Hugo site and upload as ZIP

on:
  # Läuft bei Push auf main branch
  push:
    branches:
      - main
      - master
  
  # Ermöglicht manuelles Auslösen des Workflows
  workflow_dispatch:

# Setzt Berechtigungen für GITHUB_TOKEN um Releases zu erstellen
permissions:
  contents: write

# Standard Shell für alle run steps
defaults:
  run:
    shell: bash

jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.148.1
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "https://schaeftlarner-konzerte.de/"
      
      - name: Create ZIP archive
        run: |
          cd public
          zip -r ../schaeftlarner-konzerte-website-$(date +%Y%m%d-%H%M%S).zip .
          cd ..
          echo "ZIP_FILE=$(ls schaeftlarner-konzerte-website-*.zip)" >> $GITHUB_ENV
      
      - name: Upload ZIP as artifact
        uses: actions/upload-artifact@v4
        with:
          name: website-build
          path: ${{ env.ZIP_FILE }}
          retention-days: 30
      
      - name: Create Release
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: build-${{ github.run_number }}
          name: Website Build ${{ github.run_number }}
          body: |
            Automatischer Build der Schäftlarner Konzerte Website
            
            **Build Details:**
            - Commit: ${{ github.sha }}
            - Branch: ${{ github.ref_name }}
            - Build Zeit: ${{ github.event.head_commit.timestamp }}
            
            **Installation:**
            1. ZIP-Datei herunterladen
            2. Entpacken auf Webserver
            3. Webserver auf den entpackten Ordner zeigen lassen
          files: ${{ env.ZIP_FILE }}
          draft: false
          prerelease: false